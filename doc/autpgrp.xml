<Chapter><Heading>Investigating the automorphism group</Heading><P/>

Let <M>G</M> be a finitely generated group. Then the term
<M>\gamma_cG</M> of the lower central series is fully invariant
subgroup of <M>G</M>.  Thus every automorphism <M>\alpha\in{\rm
Aut}(G)</M> induces an automorphism <M>\varphi_c\in{\rm
Aut}(G/\gamma_cG)</M>. We obtain a homomorphism <M>\nu_c\colon{\rm
Aut}(G)\to{\rm Aut}(G/\gamma_cG)</M>, <M>\alpha\mapsto\alpha_c</M>.
This homomorphism map the inner automorphism <M>{\rm Inn}(G)</M> onto
<M>{\rm Inn}(G/\gamma_cG)</M> and thus we obtain a homomorphism
<Display>
  \nu_c\colon{\rm Out}(G)\to {\rm Out}(G/\gamma_cG).
</Display>
Similar, for every <M>d\leq c</M>, we obtain a homomorphism
<M>\mu_{c,d}\colon {\rm Out}(G/\gamma_cG)\to{\rm
Out}(G/\gamma_dG)</M>. Since <M>\nu_d = \nu_c\circ \mu_{c,d}</M>, this
yields that
<Display>
  {\rm im}(\nu_d)\leq \ldots\leq {\rm im}(\mu_{c,d})\leq {\rm im}(\mu_{c-1,d})
  \leq \ldots \leq {\rm im}(\mu_{d,d}) = {\rm Out}(G/\gamma_dG).
</Display>
This sequence can be used to guess the shape of <M>{\rm im}(\nu_d)</M>
and therefore to guess the shape of <M>{\rm Out}(G)/\ker\nu_d</M>. The
\AutPGrp-Package can be used to compute the images <M>{\rm
im}(\mu_{c,d})</M> if the abelian quotient of <M>G</M> is elementary
abelian. For further details we refer to <Cite Key="EH09"/>.

<Section><Heading>Usage</Heading>

<ManSection><Func Name="AutomorphismGroupSequence" Arg="PcpGroup"/>
<Description>
if the abelianization of <A>PcpGroup</A> is elementary abelian, this
method computes a list of the images of the outer automorphism group
of <M>G/\gamma_cG</M> in <M>{\rm Out}(G/\gamma_dG)</M> for any
<M>d\leq c</M> with <M>{\rm Out}(G/\gamma_dG)</M> being still
solvable. More precisely, the entry {\bf a[i][j]} denotes the image of
<M>{\rm Out}(G/\gamma_{j+1}G)</M> in <M>{\rm
Out}(G/\gamma_{i+1}G)</M>.

In the following example we consider the nilpotent quotients of the
Grigorchuk group and compute its outer automorphism group sequence.
<Example><![CDATA[
gap> G := ExamplesOfLPresentations( 1 );;
gap> A := AutomorphismGroupSequence( G, 5 );;
[1,2]: ab [ [ 2, 1 ] ]
[1,3]: ab [ [ 2, 1 ] ]
[1,4]: ab [ [ 2, 1 ] ]
[1,5]: ab [ [ 2, 1 ] ]<P/>

[2,3]: ab [ [ 2, 1 ] ]
[2,4]: ab [ [ 2, 1 ] ]
[2,5]: ab [ [ 2, 1 ] ]<P/>

[3,4]: id [ 16, 11 ]
[3,5]: ab [ [ 2, 2 ] ]<P/>

[4,5]: ab [ [ 2, 2 ] ]
]]></Example>
</Description>
</ManSection>

</Section>

</Chapter>
