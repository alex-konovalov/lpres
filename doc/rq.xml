<Chapter><Heading>Torsion-Free Nilpotent Quotients of L-presented groups</Heading>

The nilpotent quotient algorithm for finitely L-presented groups <Cite
Key=""> readily generalizes to an algorithm for computing a polycyclic
presentation for the torsion free nilpotent quotients of an L-presented
group.

<ManSection><Oper Name="TorsionFreeNilpotentQuotient" Arg="g [c]"/>
<Description>
returns a polycyclic presentation for the (at most) class-<A>c</A> torsion-free nilpotent
quotient <M>g/g_{c+1}</M> of the L-presented group <A>g</A> if <A>c</A>
is specified. If <A>c</A> is not given, this method attempts to
compute the largest torsion-free nilpotent quotient of <A>g</A> and will terminate
only if <A>g</A> has such a largest quotient.<P/>

The following example computes the class-3 nilpotent quotient and the
torsion-free nilpotent quotient of the IA subgroup.
<Example><![CDATA[
gap> ia := Source( EmbeddingOfIASubgroup( AutomorphismGroup( FreeGroup( 3 ) ) ) );
<invariant LpGroup on the generators [ C(1,2), C(1,3), C(2,1), C(2,3), C(3,1), C(3,2), M(1,[2,3]), M(2,[1,3]), M(3,[1,2]) ]>
gap> H := NilpotentQuotient( ia, 3 );
Pcp-group with orders [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 4, 2, 12, 2, 3,
  2, 0, 2, 2, 4, 12, 0, 2, 12, 0, 0, 2, 2, 2, 4, 12, 4, 4, 12, 2, 0, 12, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 6, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 6, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
gap> lcs := LowerCentralSeriesOfGroup( H );;
gap> List( [1..Length(lcs)-1], x-> AbelianInvariants( lcs[x]/lcs[x+1] ) );
[ [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 2, 3, 3, 3, 3, 3, 3, 3, 3, 3 ] ]
gap> h := TorsionFreeNilpotentQuotient( ia, 3 );
Pcp-group with orders [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 2, 2, 2, 2, 3,
  2, 0, 2, 2, 2, 2, 0, 2, 2, 0, 0, 2, 2, 2, 2, 2, 2, 2, 2, 2, 0, 2, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
  0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ]
gap> rcs := RationalLowerCentralSeries( h );;
gap> List( [1..Length(rcs)-1], x-> AbelianInvariants( rcs[x]/rcs[x+1] ) );
[ [ 0, 0, 0, 0, 0, 0, 0, 0, 0 ], [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ],
  [ 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
    0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 ] ]
]]></Example>
</Description>
</ManSection>

<ManSection><Oper Name="EpimorphismTorsionFreeNilpotentQuotient" Arg="g [c]"/>
<Description>
This method returns an epimorphism from the L-presented group
<A>g</A> onto a torsion-free nilpotent quotient. If the optional argument <A>c</A>
is given, the epimorphism is onto the maximal class-<A>c</A> quotient
<M>g/g_{c+1}</M>. If no second argument is given, this method
attempts to compute an epimorphism onto the largest torsion-free nilpotent quotient
of <A>g</A>. If <A>g</A> does not have a largest torsion-free nilpotent quotient,
this method will not terminate.<P/>

The following example computes an epimorphism from the Brunner-Sidki-Vieira group
onto its largest torsion-free nilpotent quotient of class 2.

<Example><![CDATA[
gap> G := ExamplesOfLPresentations( 4 );
<invariant LpGroup of size infinity on the generators [ a, b ]>
gap> EpimorphismTorsionFreeNilpotentQuotient( G );
[ a, b ] -> [ g1, g2 ]
gap> Range( last );
Pcp-group with orders [ 0, 0, 0 ]
]]></Example>
</Description>
</ManSection>

</Chapter>
